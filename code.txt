20. Valid Parentheses
class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        stack = []
        
        maps = {')':'(', '}':'{',']':'['}
        
        for i in s:
            if i in maps:
                if stack and stack[-1] == maps[i]:
                    stack.pop()
                else:
                    return(False)
            else:
                stack.append(i)
        if len(stack) == 0:
            return(True)
        else:
            return(False)
            
            
  704. Binary Search          
 class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        
        l = 0
        r = len(nums) 
        if len(nums) == 0:
            return(-1)
        if nums[0] == target:
            return(0)
            
        while (l < r) and (r != l + 1) : 
            if target > nums[  (l + r) // 2 ]:
                l = (l + r) // 2 
            elif target < nums[  (l + r) // 2 ] :
                r = (l + r) // 2 
            elif target == nums[  (l + r) // 2 ]:
                return((l + r) // 2)
        return(-1)
           

